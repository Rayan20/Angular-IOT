{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","appService","title","userForm","monitor","nullValidator","required","destroy$","value","console","log","valueJSON","push","sendMSG","subscribe","data","reset","next","unsubscribe","onSubmit","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","httpOptions","headers","AppService","http","post","providedIn","HeaderComponent","window","location","href","goBack","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","// @ts-ignore\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnDestroy} from '@angular/core';\n// @ts-ignore\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AppService} from './app.service';\nimport {takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnDestroy {\n\n    constructor(private appService: AppService) {\n    }\n\n    title = 'angular-iot';\n\n    userForm = new FormGroup({\n        monitor: new FormControl('', Validators.nullValidator && Validators.required),\n    });\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n    onSubmit(value) {\n        console.log(value);\n        var valueJSON = [];\n        valueJSON.push(value);\n        this.appService.sendMSG(valueJSON).subscribe(data => {\n            console.log('message:', data);\n            console.log(data);\n            this.userForm.reset();\n        });\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.unsubscribe();\n    }\n}\n","<app-header></app-header>\n<div class=\"container text-center\">\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit(userForm.value)\" required>\n            <div class=\"form-group\" style=\"border: black solid 2px\">\n                <label for=\"monitor\">Write your message!</label>\n                <input type=\"text\" class=\"form-control\" name=\"monitor\" formControlName=\"monitor\" id=\"monitor\">\n\n            </div>\n        <button type=\"submit\" class=\"btn btn-danger\">Create</button>\n    </form>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport { environment } from '../environments/environment';\n\n\n// state related imports\n// import { StoreModule } from '@ngrx/store';\n// import { StoreDevtoolsModule } from '@ngrx/store-devtools';\n// import { reducers, metaReducers } from './app-state/reducers';\n// import { CustomRouterStateSerializer } from './app-state/shared/utils';\n// import { StoreRouterConnectingModule, RouterStateSerializer } from '@ngrx/router-store';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    /**\n     * StoreModule.forRoot is imported once in the root module, accepting a reducer\n     * function or object map of reducer functions. If passed an object of\n     * reducers, combineReducers will be run creating your application\n     * meta-reducer. This returns all providers for an @ngrx/store\n     * based application.\n\n    StoreModule.forRoot(reducers, { metaReducers }),\n\n    /**\n     * @ngrx/router-store keeps router state up-to-date in the store.\n\n    StoreRouterConnectingModule,\n\n    /**\n     * Store devtools instrument the store retaining past versions of state\n     * and recalculating new states. This enables powerful time-travel\n     * debugging.\n     *\n     * To use the debugger, install the Redux Devtools extension for either\n     * Chrome or Firefox\n     *\n     * See: https://github.com/zalmoxisus/redux-devtools-extension\n\n     !environment.production ? StoreDevtoolsModule.instrument() : [],\n\n    /**\n     * EffectsModule.forRoot() is imported once in the root module and\n     * sets up the effects class to be initialized immediately when the\n     * application starts.\n     *\n     * See: https://github.com/ngrx/platform/blob/master/docs/effects/api.md#forroot\n     */\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n    })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  constructor(private http: HttpClient) { }\n\n  sendMSG(value: any) {\n    console.log(value);\n    return this.http.post('api/user', value, httpOptions);\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    goBack(): void {\n        window.location.href = 'https://iot-testing.herokuapp.com';\n    }\n}\n","<div class=\"header\">\n    <button class=\"btn third pull-left\" (click)=\"goBack()\">Home</button>\n    <br><br>\n    <div class=\"text-center\">\n        <h1>LCD Monitor Display</h1>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}